#%RAML 1.0
title: Item Storage
version: v11.0
protocols: [ HTTP, HTTPS ]
baseUri: http://localhost

documentation:
  - title: Item Storage API
    content: <b>Storage for items in the inventory</b>

types:
  item: !include item-storage/item.json
  items: !include item-storage/items.json
  itemsPatch: !include itemspatch.json
  errors: !include raml-util/schemas/errors.schema
  retrieveDto: !include retrieveEntitiesDto.json

traits:
  pageable: !include raml-util/traits/pageable.raml
  searchable: !include raml-util/traits/searchable.raml
  validate: !include raml-util/traits/validation.raml

resourceTypes:
  collection: !include raml-util/rtypes/collection.raml
  collection-item: !include raml-util/rtypes/item-collection.raml

/item-storage:
  /items:
    displayName: Items
    type:
      collection:
        exampleCollection: !include  examples/item-storage/items_get.json
        schemaCollection: items
        schemaItem: item
        exampleItem: !include  examples/item-storage/item_get.json
    get:
      is: [pageable,
         searchable: {description: "using CQL (indexes for item and material type)",
                        example: "title=\"*uproot*\""},
          ]
    post:
      is: [validate]
    patch:
      is: [validate]
      body:
        application/json:
          type: itemsPatch
          example:
            strict: false
            value: examples/items_patch.json
      responses:
        204:
          description: "Items successfully updated"
        400:
          description: "Bad request: malformed request body"
          body:
            text/plain:
              example: "Bad request: malformed request body"
        404:
          description: "There is no source record for that item ID"
          body:
            text/plain:
              example: "There is no source record for that item ID"
        409:
          description: "Optimistic locking version conflict"
          body:
            text/plain:
              example: "Optimistic locking version conflict"
        413:
          description: "Payload Too Large"
          body:
            text/plain:
              example: "Payload Too Large"
        500:
          description: "Internal server error"
          body:
            text/plain:
              example: "Internal server error"
    delete:
      is: [searchable: { description: "CQL to select items to delete, use cql.allRecords=1 to delete all", example: "barcode==\"123-0*\"" } ]
      responses:
        204:
          description: "Selected items deleted"
        400:
          description: "Bad request, e.g. malformed query parameter"
          body:
            text/plain:
              example: "query parameter is empty"
        500:
          description: "Internal server error, e.g. due to misconfiguration"
          body:
            text/plain:
              example: "Internal server error, contact administrator"
    /{itemId}:
      type:
        collection-item:
          exampleItem: !include examples/item-storage/item_get.json
          schema: item
      get:
    /retrieve:
      post:
        is: [validate]
        body:
          application/json:
            type: retrieveDto
            example:
              strict: false
              value: !include examples/retrieveEntitiesDto.json
        description: |
          Fetch inventory items collection by POST request
