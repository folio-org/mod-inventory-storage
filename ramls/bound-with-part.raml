#%RAML 1.0
title: Bound-With API
version: v1.1
protocols: [ HTTP, HTTPS ]
baseUri: http://localhost:8081

documentation:
  - title: Bound-With API
    content: API calls for querying and managing individual parts or all parts of bound-withs

types:
  boundWithPart: !include bound-with-part.json
  boundWithParts: !include bound-with-parts.json
  boundWith: !include boundWith.json
  errors: !include raml-util/schemas/errors.schema

traits:
  pageable: !include raml-util/traits/pageable.raml
  searchable: !include raml-util/traits/searchable.raml
  language: !include raml-util/traits/language.raml
  validate: !include raml-util/traits/validation.raml

resourceTypes:
  collection: !include raml-util/rtypes/collection.raml
  collection-item: !include raml-util/rtypes/item-collection.raml

/inventory-storage/bound-with-parts:
  type:
    collection:
      exampleCollection: !include examples/bound-with-parts.json
      exampleItem: !include examples/bound-with-part.json
      schemaCollection: boundWithParts
      schemaItem: boundWithPart
  get:
    is: [
      searchable: {description: "with valid searchable fields", example: "itemId=aaa"},
      pageable
    ]
    description: Return a list of parts of bound-withs
  post:
    description: Add a new part to a bound-with item
    is: [validate]
  /{id}:
    description: "Pass in the bound with part id"
    type:
      collection-item:
        exampleItem: !include examples/bound-with-part.json
        schema: boundWithPart

/inventory-storage/bound-withs:
  put:
    description: Manage all parts (holdings references) of a bound-with item
    body:
      application/json:
        description: ID of the bound-with Item and IDs of the holdings within it.
        type: boundWith
        example: !include examples/boundWith.json
    responses:
      204:
        description: No content; updates processed.
      400:
        description: Constraint violation; referenced Item and/or holdings were not found.
        body:
          application/json:
      422:
        description: Schema violation, i.e. missing mandatory property or constraint violations.
        body:
          application/json:
            example: {"errors":[{"message":"must not be null","type":"1","code":"javax.validation.constraints.NotNull.message","parameters":[{"key":"itemId","value":"null"}]}]}
