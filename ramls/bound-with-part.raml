#%RAML 1.0
title: Bound-With API
version: v1.1
protocols: [ HTTP, HTTPS ]
baseUri: http://localhost:8081

documentation:
  - title: Bound-With API
    content: API calls for querying and managing individual parts or all parts of bound-withs

types:
  boundWithPart: !include bound-with-part.json
  boundWithParts: !include bound-with-parts.json
  boundWith: !include boundWith.json
  errors: !include raml-util/schemas/errors.schema

traits:
  pageable: !include raml-util/traits/pageable.raml
  searchable: !include raml-util/traits/searchable.raml
  validate: !include raml-util/traits/validation.raml

resourceTypes:
  collection: !include raml-util/rtypes/collection.raml
  collection-item: !include raml-util/rtypes/item-collection.raml

/inventory-storage/bound-with-parts:
  type:
    collection:
      exampleCollection: !include examples/bound-with-parts.json
      exampleItem: !include examples/bound-with-part.json
      schemaCollection: boundWithParts
      schemaItem: boundWithPart
  get:
    is: [
      searchable: {description: "with valid searchable fields", example: "itemId=aaa"},
      pageable
    ]
    description: Return a list of parts of bound-withs
  post:
    description: Add a new part to a bound-with item
    is: [validate]
  /{id}:
    description: "Pass in the bound with part id"
    type:
      collection-item:
        exampleItem: !include examples/bound-with-part.json
        schema: boundWithPart

/inventory-storage/bound-withs:
  put:
    description: Manage the collective set of parts (holdings references) of a bound-with item
    body:
      application/json:
        description: The bound-with composite to PUT must contain the ID of the bound-with Item and a list of contents,
          which contains the IDs of the holdings that should make up the bound-with.
          The holdings record that the bound-with Item links directly to is by convention designated
          as the main bound-with part. It is redundant to include this holdings record in the
          list of contents but it can be very convenient for clients to have it there anyway.
          The API will thus ensure that the main title is always stored in the parts list.
          The client doesn't have to include it in the bound-with PUT request but it is allowed to do so.
          The bound-with composite must include at least one other holdings ID in the list, or it will
          not be considered a bound-with. If it _was_ a bound-with before a request including only the
          main holdings ID (or a request including no holdings at all), then the list of contents will be emptied,
          and the Item will become an ordinary Item.
        type: boundWith
        example: !include examples/boundWith.json
    responses:
      204:
        description: No content; updates processed.
      400:
        description: Constraint violation; referenced Item and/or holdings were not found.
        body:
          application/json:
      422:
        description: Schema violation, i.e. missing mandatory property or constraint violations.
        body:
          application/json:
            example: {"errors":[{"message":"must not be null","type":"1","code":"javax.validation.constraints.NotNull.message","parameters":[{"key":"itemId","value":"null"}]}]}
